# Port where health checks, metrics, etc are displayed.
# Separated so that we can use network separation for protection
#management.port=8081
server.port=8082

spring.datasource.url=jdbc:mysql://${DBHOST:localhost}:${DBPORT:3306}/${DBNAME:heetiscleardbprofiledev}?useSSL=${USE_SSL:false}&autoReconnect=true&autoReconnectForPools=true&verifyServerCertificate=false&requireSSL=${USE_SSL:false}
spring.datasource.username=${DBUSER:root}
spring.datasource.password=${DBPASSWORD:}
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.tomcat.validation-query=SELECT 1
spring.datasource.tomcat.time-betwee-eviction-runs-millis=60000
spring.datasource.tomcat.max-active=5
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.test-on-return=true
spring.datasource.tomcat.test-while-idle=true
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
server.contextPath=/${PROFILE_CONTEXT_ROOT:}

# What to do with the database on startup: none, validate, update, create or create-drop
spring.jpa.hibernate.ddl-auto=none

# turn on lots of logging of interesting and useful stuff
#debug=true

# flyway properties
flyway.baseline-description= #
flyway.baseline-version=1
flyway.baseline-on-migrate=true
flyway.check-location=false # Check that migration scripts location exists.
flyway.clean-on-validation-error=false
flyway.enabled=true # Enable flyway.
flyway.encoding= #
flyway.ignore-failed-future-migration= #
flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it.
flyway.locations=classpath:db/migration
flyway.out-of-order=true
flyway.password=${spring.datasource.password}
flyway.schemas=${DBNAME:heetiscleardbprofiledev}
flyway.placeholder-prefix=
flyway.placeholder-replacement=
flyway.placeholder-suffix=
flyway.placeholders.*=
flyway.sql-migration-prefix=V
flyway.sql-migration-separator=
flyway.sql-migration-suffix=.sql
flyway.table= #
flyway.url=${spring.datasource.url}
flyway.user=${spring.datasource.username}
flyway.validate-on-migrate= #
flyway.initOnMigrate=true

# optimise the embedded tomcat server
server.compression.enabled=true
server.compression.mime-types=text/plain,text/html,text/css,text/xml,application/json,application/javascript

spring.jpa.show-sql=true
spring.jpa.format-sql=true

#log settings
logging.file=${LOG_DIR:${HOME}}/auth.log